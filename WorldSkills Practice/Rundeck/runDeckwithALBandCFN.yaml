AWSTemplateFormatVersion: 2010-09-09
Description: "This is the third CF Template for running Rundeck via UserData with ALB and Autoscale!"
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access into the server
    Type: AWS::EC2::KeyPair::KeyName
    AllowedPattern : "[a-zA-Z0-9]+"
  Environment:
    Description:    Please specify the target environment.
    Type:           String
    Default:        "prod"
    AllowedValues:
      - prod
      - staging
      - dev
      - qa
  AppName:
    Description:  Application environment name.
    Type:         String
    Default:      "rundeck"
  DBName:
    Default: rundeckDb
    Description: The database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  ALBType:
    Description:    AWS Load Balancer Type.
    Type:           String
    Default:        "application"
    AllowedValues:
      - application
      - network
  OriginProtocolPolicy:
    Description:    CloudFront Origin Protocol Policy to apply to your origin.
    Type:           String
    Default:        "http-only"
    AllowedValues:
      - http-only
      - match-viewer
      - https-only
  Compress:
    Description:    CloudFront Origin Protocol Policy to apply to your origin.
    Type:           String
    Default:        "false"
    AllowedValues:
      - true
      - false

  DefaultTTL:
    Description:    The default time in seconds that objects stay in CloudFront caches before CloudFront forwards another request to your custom origin. By default, AWS CloudFormation specifies 86400 seconds (one day).
    Type:           String
    Default:        "0"

  MaxTTL:
    Description:    The maximum time in seconds that objects stay in CloudFront caches before CloudFront forwards another request to your custom origin. By default, AWS CloudFormation specifies 31536000 seconds (one year).
    Type:           String
    Default:        "0"

  MinTTL:
    Description:    The minimum amount of time that you want objects to stay in the cache before CloudFront queries your origin to see whether the object has been updated.
    Type:           String
    Default:        "0"

  SmoothStreaming:
    Description:    Indicates whether to use the origin that is associated with this cache behavior to distribute media files in the Microsoft Smooth Streaming format.
    Type:           String
    Default:        "false"
    AllowedValues:
      - true
      - false

  QueryString:
    Description:    CIndicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior.
    Type:           String
    Default:        "true"
    AllowedValues:
      - true
      - false

  ForwardCookies:
    Description:    Forwards specified cookies to the origin of the cache behavior.
    Type:           String
    Default:        "all"
    AllowedValues:
      - all
      - whitelist
      - none

  ViewerProtocolPolicy:
    Description:    The protocol that users can use to access the files in the origin that you specified in the TargetOriginId property when the default cache behavior is applied to a request.
    Type:           String
    Default:        "allow-all"
    AllowedValues:
      - allow-all

  PriceClass:
    Description:    The price class that corresponds with the maximum price that you want to pay for CloudFront service. If you specify PriceClass_All, CloudFront responds to requests for your objects from all CloudFront edge locations.
    Type:           String
    Default:        "PriceClass_All"
    AllowedValues:
      - PriceClass_All
      - PriceClass_100
      - PriceClass_200

  SslSupportMethod:
    Description:    Specifies how CloudFront serves HTTPS requests.
    Type:           String
    Default:        "sni-only"
    AllowedValues:
      - sni-only
      - vip

  MinimumProtocolVersion:
    Description:    The minimum version of the SSL protocol that you want CloudFront to use for HTTPS connections.
    Type:           String
    Default:        "TLSv1"
    AllowedValues:
      - TLSv1
      - TLSv1.2_2018
      - TLSv1.1_2016
      - TLSv1_2016
      - SSLv3

  OriginKeepaliveTimeout:
    Description:    You can create a custom keep-alive timeout. All timeout units are in seconds. The default keep-alive timeout is 5 seconds, but you can configure custom timeout lengths. The minimum timeout length is 1 second; the maximum is 60 seconds.
    Type:           String
    Default:        "60"

  OriginReadTimeout:
    Description:    You can create a custom origin read timeout. All timeout units are in seconds. The default origin read timeout is 30 seconds, but you can configure custom timeout lengths. The minimum timeout length is 4 seconds; the maximum is 60 seconds.
    Type:           String
    Default:        "30"

  ALBScheme:
    Description:    Origin ALB scheme.
    Type:           String
    Default:        "internet-facing"
    AllowedValues:
      - internet-facing
      - internal

  ALBTargetGroupHealthCheckIntervalSeconds:
    Description:    Origin ALB Target Group Health Check Interval in Seconds.
    Type:           String
    Default:        "30"

  ALBTargetGroupHealthCheckTimeoutSeconds:
    Description:    Origin ALB Target Group Health Check Timeout in Seconds.
    Type:           String
    Default:        "5"

  ALBTargetGroupHealthyThresholdCount:
    Description:    Origin ALB Target Group Healthy Threshold Count.
    Type:           String
    Default:        "5"

  ALBTargetGroupUnhealthyThresholdCount:
    Description:    Origin ALB Target Group Unhealthy Threshold Count.
    Type:           String
    Default:        "2"

  ALBAttributeIdleTimeOut:
    Description:    Origin ALB Target Group Unhealthy Threshold Count.
    Type:           String
    Default:        "60"

  ALBAttributeDeletionProtection:
    Description:    Origin ALB Target Group Unhealthy Threshold Count.
    Type:           String
    Default:        "false"
    AllowedValues:
      - true
      - false

  ALBAttributeRoutingHttp2:
    Description:    Origin ALB Target Group Unhealthy Threshold Count.
    Type:           String
    Default:        "true"
    AllowedValues:
      - true
      - false

  ALBTargetGroupAttributeDeregistration:
    Description:    Origin ALB Target Group Deregistration Timeout.
    Type:           String
    Default:        "300"

  HealthCheckProtocol:
    Description:    Origin ALB Target Group Health Check Protocol.
    Type:           String
    Default:        "HTTP"
    AllowedValues:
      - HTTP
  DBUser:
    NoEcho: 'true'
    Description: The database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
    Default: rundeck
  DBPassword:
    NoEcho: 'true'
    Description: The database admin account password
    Type: String
    Default: rundeck123
    MinLength: '1'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]+'
    ConstraintDescription: must contain only alphanumeric characters.
  DBAllocatedStorage:
    Default: '5'
    Description: The size of the database (Gb)
    Type: Number
    MinValue: '5'
    MaxValue: '1024'
    ConstraintDescription: must be between 5 and 1024Gb.
  DBInstanceClass:
    Description: The database instance type
    Type: String
    Default: db.t2.small
    AllowedValues: [db.t1.micro, db.m1.small, db.m1.medium, db.m1.large, db.m1.xlarge,
      db.m2.xlarge, db.m2.2xlarge, db.m2.4xlarge, db.m3.medium, db.m3.large, db.m3.xlarge,
      db.m3.2xlarge, db.m4.large, db.m4.xlarge, db.m4.2xlarge, db.m4.4xlarge, db.m4.10xlarge,
      db.r3.large, db.r3.xlarge, db.r3.2xlarge, db.r3.4xlarge, db.r3.8xlarge, db.m2.xlarge,
      db.m2.2xlarge, db.m2.4xlarge, db.cr1.8xlarge, db.t2.micro, db.t2.small, db.t2.medium,
      db.t2.large]
    ConstraintDescription: must select a valid database instance type.
  MultiAZ:
    Description: Multi-AZ master database
    Type: String
    Default: 'false'
    AllowedValues: ['true', 'false']
    ConstraintDescription: must be true or false.
  RunDeckFileName:
    Type: String
    Default: rundeck-3.0.22-20190512.war
  RunDeckConfigURL:
    Type: String
    Default: https://shortto.s3.amazonaws.com/rundeck-config.properties.copy
  EnvironmentSize:
    Type: String
    Default: SMALL
    AllowedValues:
      - SMALL
      - MEDIUM
      - LARGE
    Description: Select Environment Size (S,M,L)
  VpcId:
    Description: Enter the VpcId
    Type: AWS::EC2::VPC::Id
  SubnetIds:
    Description: Enter the Subnets
    Type: List<AWS::EC2::Subnet::Id>
  LoggingBucketVersioning:
    Description:    The versioning state of an Amazon S3 bucket. If you enable versioning, you must suspend versioning to disable it.
    Type:           String
    Default:        "Suspended"
    AllowedValues:
      - Enabled
      - Suspended
Mappings:
  InstanceSize:
    SMALL:
      "EC2" : "t2.micro"
      "DB" : "db.t2.micro"
    MEDIUM:
      "EC2" : "t2.small"
      "DB" : "db.t2.small"
    LARGE:
      "EC2" : "t2.medium"
      "DB" : "db.t2.medium"
Resources:
  # IAM ROLE USED FOR LOGGING KMS KEY ACCESS
  AdministratorAccessIAMRole:
    Type: 'AWS::IAM::Role'
    Description: "Administrator Access IAM Role For KMS"
    Properties:
      RoleName: !Sub "AdministratorAccess-${AppName}"
      ManagedPolicyArns:
        - !Sub "arn:aws:iam::aws:policy/AdministratorAccess"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: '/'
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ALB Security Group
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EC2 Instance
  EC2InboundRule: # EC2 can only accept traffic from ALB
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      SourceSecurityGroupId:
        !GetAtt
        - ALBSecurityGroup
        - GroupId
      GroupId:
        !GetAtt
        - EC2SecurityGroup
        - GroupId
  DBEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Open database for access to EC2
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '3306'
        ToPort: '3306'
        SourceSecurityGroupName: !Ref 'EC2SecurityGroup'
  MasterDB:
   Type: AWS::RDS::DBInstance
   Properties:
     DBName: !Ref 'DBName'
     AllocatedStorage: !Ref 'DBAllocatedStorage'
     DBInstanceClass: !Ref 'DBInstanceClass'
     Engine: MySQL
     MasterUsername: !Ref 'DBUser'
     MasterUserPassword: !Ref 'DBPassword'
     MultiAZ: !Ref 'MultiAZ'
     Tags:
     - Key: Name
       Value: Master Database
     VPCSecurityGroups:
       - !GetAtt [DBEC2SecurityGroup, GroupId]
   DeletionPolicy: Snapshot
  # KMS KEY USED FOR LOGGING S3 BUCKET
  LoggingBucketKMSKey:
    Type: 'AWS::KMS::Key'
    DependsOn: AdministratorAccessIAMRole
    Properties:
      Description: 'Logging S3 Bucket KMS Key'
      Enabled: true
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: Enable IAM policies to allow access to the Key
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action:
              - 'kms:*'
            Resource: '*'
          - Sid: Allow administration of the key
            Effect: Allow
            Principal:
              AWS:
                - !Sub 'arn:aws:iam::${AWS::AccountId}:role/AdministratorAccess-${AppName}'
            Action:
              - 'kms:Put*'
              - 'kms:ScheduleKeyDeletion'
              - 'kms:CancelKeyDeletion'
              - 'kms:Describe*'
              - 'kms:Revoke*'
              - 'kms:Disable*'
              - 'kms:Enable*'
              - 'kms:Delete*'
              - 'kms:List*'
              - 'kms:Update*'
              - 'kms:Create*'
            Resource: '*'

# KMS KEY ALIAS USED FOR LOGGING BUCKET
  LoggingBucketKMSKeyAlias:
    Type: 'AWS::KMS::Alias'
    Properties:
      AliasName: !Sub 'alias/${AppName}/${Environment}/s3-logging-kms'
      TargetKeyId: !Sub '${LoggingBucketKMSKey}'

# LOGGING S3 BUCKET
  LoggingBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: 'Retain'
    DependsOn: LoggingBucketKMSKey
    Properties:
      BucketName: !Sub '${AppName}-logging-${Environment}-${AWS::AccountId}-${AWS::Region}'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !GetAtt 'LoggingBucketKMSKey.Arn'
              SSEAlgorithm: 'aws:kms'
      VersioningConfiguration:
        Status: !Ref 'LoggingBucketVersioning'

# LOGGING S3 BUCKET POLICY
  LoggingBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref 'LoggingBucket'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: LoggingBucketPermissions
            Effect: 'Allow'
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 's3:PutObject'
            Resource:
              - !Sub 'arn:aws:s3:::${LoggingBucket}/AWSLogs/${AWS::AccountId}/*'
  LoadBalancer: # Application Load Balancer
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      SecurityGroups:
        - !Ref ALBSecurityGroup
      Subnets: !Ref SubnetIds
  LoadBalancerListener: # Port 80 Listener for ALB
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: TargetGroup
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VpcId
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: !GetAZs
      LaunchConfigurationName: !Ref LaunchConfiguration
      MinSize: 1
      MaxSize: 3
      TargetGroupARNs:
        - !Ref TargetGroup
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: True
  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-00e782930f1c3dbc7
      InstanceType: !FindInMap [InstanceSize, !Ref EnvironmentSize, EC2]
      KeyName: !Ref KeyName
      UserData:
        "Fn::Base64":
          !Sub |
            #!/bin/bash
            yum -y install wget
            yum -y install java
            export RDECK_HTTP_PORT=80
            wget --quiet https://download.rundeck.org/war/${RunDeckFileName}
            mkdir /rundeckFiles/
            mkdir /rundeckFiles/server/
            mkdir /rundeckFiles/server/config
            wget ${RunDeckConfigURL} -O /rundeckFiles/server/config/custom.config
            sed -i 's/DNS_REPLACE/${LoadBalancer.DNSName}/g' /rundeckFiles/server/config/custom.config
            sed -i 's/RDS_HOSTNAME/${MasterDB.Endpoint.Address}/g' /rundeckFiles/server/config/custom.config
            sed -i 's/RDS_DBNAME/${DBName}/g' /rundeckFiles/server/config/custom.config
            sed -i 's/RDS_USERNAME/${DBUser}/g' /rundeckFiles/server/config/custom.config
            sed -i 's/RDS_PASSWORD/${DBPassword}/g' /rundeckFiles/server/config/custom.config
            java -server -Dserver.session.timeout=3600 -Dserver.port=80 -Dserver.address=${LoadBalancer.DNSName} -Drdeck.base=/rundeckFiles/ -Ddefault.user.name=admin -Ddefault.user.password=admin -Drundeck.config.name=custom.config -jar ${RunDeckFileName} &
      SecurityGroups:
        - !Ref EC2SecurityGroup
  CloudFrontDistribution:
    Type: 'AWS::CloudFront::Distribution'
    DependsOn:
    - LoggingBucket
    Properties:
      DistributionConfig:
        Comment: 'Cloudfront Distribution pointing ALB Origin'
        Origins:
          - DomainName: !GetAtt 'LoadBalancer.DNSName'
            Id: !Ref 'LoadBalancer'
            CustomOriginConfig:
              HTTPPort: '80'
              OriginProtocolPolicy: !Ref 'OriginProtocolPolicy'
              OriginKeepaliveTimeout: !Ref 'OriginKeepaliveTimeout'
              OriginReadTimeout: !Ref 'OriginReadTimeout'
              OriginSSLProtocols:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - SSLv3
        Enabled: true
        HttpVersion: 'http2'
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - DELETE
            - OPTIONS
            - PATCH
            - POST
            - PUT
          Compress: !Ref 'Compress'
          DefaultTTL: !Ref 'DefaultTTL'
          MaxTTL: !Ref 'MaxTTL'
          MinTTL: !Ref 'MinTTL'
          SmoothStreaming: 'false'
          TargetOriginId: !Ref 'LoadBalancer'
          ForwardedValues:
            QueryString: !Ref 'QueryString'
            Cookies:
              Forward: !Ref 'ForwardCookies'
          ViewerProtocolPolicy: !Ref 'ViewerProtocolPolicy'
        PriceClass: !Ref 'PriceClass'
        Logging:
          Bucket: !Sub '${LoggingBucket}.s3.amazonaws.com'
Outputs:
  AdministratorAccessIAMRole:
    Description: "Administrator Access IAM Role"
    Value:       !Ref 'AdministratorAccessIAMRole'
    Export:
      Name:      !Sub '${AppName}-iam-${Environment}-administrator-access-role'
  CloudFrontEndpoint:
    Description: "Endpoint for Cloudfront Distribution"
    Value:       !Ref 'CloudFrontDistribution'
    Export:
      Name:      !Sub '${AppName}-${Environment}-cloudfront-distribution'
  URL:
    Description: The Public DNS for the Rundeck EC2 Instance
    Value: !Sub 'http://${LoadBalancer.DNSName}/'
  DBEndpoint:
    Description: The DB Endpoint for the RDS
    Value: !Sub 'http://${MasterDB.Endpoint.Address}/'
  LoggingBucket:
    Description: "Name of S3 Logging bucket"
    Value:       !Ref 'LoggingBucket'
    Export:
      Name:      !Sub '${AppName}-logging-${Environment}-${AWS::AccountId}-${AWS::Region}'
  LoggingBucketKMSKey:
    Description:  "Logging Bucket KMS Key"
    Value:        !Ref 'LoggingBucketKMSKey'
    Export:
      Name:       !Sub '${AppName}-${Environment}-s3-logging-kms'
